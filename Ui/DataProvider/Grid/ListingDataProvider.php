<?php
declare(strict_types=1);

namespace FreireH\CatalogRuleGrid\Ui\DataProvider\Grid;

use Magento\Framework\Api\FilterBuilder;
use Magento\Framework\Api\Search\ReportingInterface;
use Magento\Framework\Api\Search\SearchCriteriaBuilder;
use Magento\Framework\App\RequestInterface;
use Magento\Framework\View\Element\UiComponent\DataProvider\DataProvider;
use Magento\Framework\App\ProductMetadataInterface;

class ListingDataProvider extends DataProvider
{
    const VERSION_ENTERPRISE = 'Enterprise';

    public function __construct(
        $name, $primaryFieldName,
        $requestFieldName,
        ReportingInterface $reporting,
        SearchCriteriaBuilder $searchCriteriaBuilder,
        RequestInterface $request,
        FilterBuilder $filterBuilder,
        ProductMetadataInterface $productMetadata,
        array $meta = [],
        array $data = []
    ) {
        $this->productMetadata = $productMetadata;
        parent::__construct($name, $primaryFieldName, $requestFieldName, $reporting, $searchCriteriaBuilder, $request, $filterBuilder, $meta, $data);
    }

    public function getSearchResult()
    {
        $result = parent::getSearchResult(); // TODO: Change the autogenerated stub
        $column = $this->getColumnByVersion();

        $adminSubQuery = new \Zend_Db_expr("(
                select $column, GROUP_CONCAT(name ORDER BY name SEPARATOR ', ') as website_id
                from catalogrule_website left join store_website ON catalogrule_website.website_id = store_website.website_id
                group by $column
                )");

        $result->getSelect()->joinLeft(
            ['website' => $adminSubQuery],
            'website.' . $column . ' = main_table.' . $column,
            ['website_id' => 'website.website_id']
        );

//        die($result->getSelectSql(1));

        return $result;
    }

    private function getColumnByVersion(): string
    {
        if($this->productMetadata->getEdition() == static::VERSION_ENTERPRISE){
            return 'row_id';
        }

        return 'rule_id';
    }
}
